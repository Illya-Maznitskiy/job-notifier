"""Rename user_id to telegram_id in users

Revision ID: 4b6c90828e15
Revises: e7f2415e0f1d
Create Date: 2025-09-23 19:21:55.662480

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4b6c90828e15"
down_revision: Union[str, Sequence[str], None] = "e7f2415e0f1d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Add telegram_id as nullable first
    op.add_column(
        "users", sa.Column("telegram_id", sa.BigInteger(), nullable=True)
    )

    # Fill telegram_id with existing user_id values
    op.execute(
        "UPDATE users SET telegram_id = user_id WHERE telegram_id IS NULL"
    )

    # Backfill existing NULLs for last_reset_date
    op.execute(
        "UPDATE users SET last_reset_date = CURRENT_DATE WHERE last_reset_date IS NULL"
    )

    # Make last_reset_date NOT NULL
    op.alter_column(
        "users", "last_reset_date", existing_type=sa.DATE(), nullable=False
    )

    # Now make telegram_id NOT NULL
    op.alter_column("users", "telegram_id", nullable=False)

    # Replace index
    op.drop_index(op.f("ix_users_user_id"), table_name="users")
    op.create_index(
        op.f("ix_users_telegram_id"), "users", ["telegram_id"], unique=True
    )

    # Drop old user_id column
    op.drop_column("users", "user_id")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False),
    )
    op.drop_index(op.f("ix_users_telegram_id"), table_name="users")
    op.create_index(
        op.f("ix_users_user_id"), "users", ["user_id"], unique=True
    )
    op.alter_column(
        "users", "last_reset_date", existing_type=sa.DATE(), nullable=True
    )
    op.drop_column("users", "telegram_id")
    # ### end Alembic commands ###
